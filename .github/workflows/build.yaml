on:
    push:
      branches:
        - main
    pull_request:
    workflow_dispatch:

jobs:

  build:
    strategy:
      matrix:
        # Also build on Windows since there have been some windows-specific
        # problems in the past.
        os: ["ubuntu-latest", "windows-latest"]
        profile: ["light-tasking", "embedded"]
        target: ["rp2040"]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - uses: alire-project/setup-alire@v4
        with:
          version: 2.1.0
          toolchain: 'gnat_arm_elf gprbuild'

      - name: Generate Runtime (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: ./generate-all.sh

      - name: Generate Runtime (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          python build-rts.py --rts-src-descriptor=bb-runtimes/gnat_rts_sources/lib/gnat/rts-sources.json ${{ matrix.target }}
          python crateify.py --runtime-dir=install/${{ matrix.profile }}-${{ matrix.target }} --profile=${{ matrix.profile }} --pretty-target=${{ matrix.target }}

      # Use the validation build profile to enforce static analysis and coding style.
      - name: Build Runtime
        run: |
          cd install/${{ matrix.profile }}-${{ matrix.target }}
          alr build
